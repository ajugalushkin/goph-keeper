// Code generated by mockery v2.45.1. DO NOT EDIT.

package mocks

import (
	context "context"

	models "github.com/ajugalushkin/goph-keeper/server/internal/dto/models"
	mock "github.com/stretchr/testify/mock"
)

// ObjectSaver is an autogenerated mock type for the ObjectSaver type
type ObjectSaver struct {
	mock.Mock
}

// Create provides a mock function with given fields: ctx, file
func (_m *ObjectSaver) Create(ctx context.Context, file *models.File) (string, error) {
	ret := _m.Called(ctx, file)

	if len(ret) == 0 {
		panic("no return value specified for Create")
	}

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *models.File) (string, error)); ok {
		return rf(ctx, file)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *models.File) string); ok {
		r0 = rf(ctx, file)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(context.Context, *models.File) error); ok {
		r1 = rf(ctx, file)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Delete provides a mock function with given fields: ctx, objectID
func (_m *ObjectSaver) Delete(ctx context.Context, objectID string) error {
	ret := _m.Called(ctx, objectID)

	if len(ret) == 0 {
		panic("no return value specified for Delete")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string) error); ok {
		r0 = rf(ctx, objectID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewObjectSaver creates a new instance of ObjectSaver. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewObjectSaver(t interface {
	mock.TestingT
	Cleanup(func())
}) *ObjectSaver {
	mock := &ObjectSaver{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
