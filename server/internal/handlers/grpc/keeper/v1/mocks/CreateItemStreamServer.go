// Code generated by mockery v2.45.1. DO NOT EDIT.

package mocks

import (
	context "context"

	keeperv1 "github.com/ajugalushkin/goph-keeper/gen/keeper/v1"
	metadata "google.golang.org/grpc/metadata"

	mock "github.com/stretchr/testify/mock"
)

// CreateItemStreamServer is an autogenerated mock type for the CreateItemStreamServer type
type CreateItemStreamServer struct {
	mock.Mock
}

// Context provides a mock function with given fields:
func (_m *CreateItemStreamServer) Context() context.Context {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Context")
	}

	r0:= context.TODO
	if rf, ok := ret.Get(0).(func() context.Context); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(context.Context)
		}
	}

	return r0
}

// Recv provides a mock function with given fields:
func (_m *CreateItemStreamServer) Recv() (*keeperv1.CreateItemStreamRequestV1, error) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Recv")
	}

	var r0 *keeperv1.CreateItemStreamRequestV1
	var r1 error
	if rf, ok := ret.Get(0).(func() (*keeperv1.CreateItemStreamRequestV1, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() *keeperv1.CreateItemStreamRequestV1); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*keeperv1.CreateItemStreamRequestV1)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// RecvMsg provides a mock function with given fields: m
func (_m *CreateItemStreamServer) RecvMsg(m interface{}) error {
	ret := _m.Called(m)

	if len(ret) == 0 {
		panic("no return value specified for RecvMsg")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(interface{}) error); ok {
		r0 = rf(m)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SendAndClose provides a mock function with given fields: _a0
func (_m *CreateItemStreamServer) SendAndClose(_a0 *keeperv1.CreateItemResponseV1) error {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for SendAndClose")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*keeperv1.CreateItemResponseV1) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SendHeader provides a mock function with given fields: _a0
func (_m *CreateItemStreamServer) SendHeader(_a0 metadata.MD) error {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for SendHeader")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(metadata.MD) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SendMsg provides a mock function with given fields: m
func (_m *CreateItemStreamServer) SendMsg(m interface{}) error {
	ret := _m.Called(m)

	if len(ret) == 0 {
		panic("no return value specified for SendMsg")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(interface{}) error); ok {
		r0 = rf(m)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SetHeader provides a mock function with given fields: _a0
func (_m *CreateItemStreamServer) SetHeader(_a0 metadata.MD) error {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for SetHeader")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(metadata.MD) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SetTrailer provides a mock function with given fields: _a0
func (_m *CreateItemStreamServer) SetTrailer(_a0 metadata.MD) {
	_m.Called(_a0)
}

// NewCreateItemStreamServer creates a new instance of CreateItemStreamServer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewCreateItemStreamServer(t interface {
	mock.TestingT
	Cleanup(func())
}) *CreateItemStreamServer {
	mock := &CreateItemStreamServer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
