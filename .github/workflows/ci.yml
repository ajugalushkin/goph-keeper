name: CI

on: [ push, pull_request ]


jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Build and push Docker images
        uses: docker/build-push-action@v6.7.0
        with:
          context: .
          file: ./server/cmd/Dockerfile
          push: true
          tags: alexangergalushkin/goph-keeper

      - name: Run Docker Compose
        run:  |
          export POSTGRES_USER=postgres
          export POSTGRES_PASSWORD=postgres
          export POSTGRES_DB=postgres
          export POSTGRES_APP_USER=praktikum
          export POSTGRES_APP_PASS=pass
          export POSTGRES_APP_DB=goph_keeper
          export PGADMIN_DEFAULT_EMAIL=pgadmin4@pgadmin.org
          export PGADMIN_DEFAULT_PASSWORD=admin
          export PGADMIN_PORT=7080
          export SERVER_CONFIG=/config/config.yaml
          export MINIO_ROOT_USER=praktikum
          export MINIO_ROOT_PASSWORD=pass1234567
          export MINIO_DEFAULT_BUCKETS=vault
          docker compose -f ./docker/docker-compose.yaml -f ./docker/docker-compose.postgresql.yaml -f ./docker/docker-compose.gophkeeper.yaml -f ./docker/docker-compose.minio.yaml up -d

      - name: Run coverage
          #        run: go test $(go list ./... | grep -v ./tests/)  -coverpkg=./... -race -coverprofile=coverage.out -covermode=atomic
        run: go test -v -race -covermode=atomic -coverprofile=coverage.out

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        env:
           CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}