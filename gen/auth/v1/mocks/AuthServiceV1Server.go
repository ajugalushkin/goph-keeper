// Code generated by mockery v2.45.1. DO NOT EDIT.

package mocks

import (
	context "context"

	v1 "github.com/ajugalushkin/goph-keeper/gen/auth/v1"
	mock "github.com/stretchr/testify/mock"
)

// AuthServiceV1Server is an autogenerated mock type for the AuthServiceV1Server type
type AuthServiceV1Server struct {
	mock.Mock
}

// LoginV1 provides a mock function with given fields: _a0, _a1
func (_m *AuthServiceV1Server) LoginV1(_a0 context.Context, _a1 *v1.LoginRequestV1) (*v1.LoginResponseV1, error) {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for LoginV1")
	}

	var r0 *v1.LoginResponseV1
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *v1.LoginRequestV1) (*v1.LoginResponseV1, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *v1.LoginRequestV1) *v1.LoginResponseV1); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*v1.LoginResponseV1)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *v1.LoginRequestV1) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// RegisterV1 provides a mock function with given fields: _a0, _a1
func (_m *AuthServiceV1Server) RegisterV1(_a0 context.Context, _a1 *v1.RegisterRequestV1) (*v1.RegisterResponseV1, error) {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for RegisterV1")
	}

	var r0 *v1.RegisterResponseV1
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *v1.RegisterRequestV1) (*v1.RegisterResponseV1, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *v1.RegisterRequestV1) *v1.RegisterResponseV1); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*v1.RegisterResponseV1)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *v1.RegisterRequestV1) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// mustEmbedUnimplementedAuthServiceV1Server provides a mock function with given fields:
func (_m *AuthServiceV1Server) mustEmbedUnimplementedAuthServiceV1Server() {
	_m.Called()
}

// NewAuthServiceV1Server creates a new instance of AuthServiceV1Server. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewAuthServiceV1Server(t interface {
	mock.TestingT
	Cleanup(func())
}) *AuthServiceV1Server {
	mock := &AuthServiceV1Server{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
